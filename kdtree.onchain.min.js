const KdT={build:(d,e=(d[0]||[]).length,n=0,s=d.length)=>s?KdT.node(KdT.sort(d,n%e),~~(s/2),e,n):null,node:(d,e,n,s)=>(new Map).set("p",d[e]).set("a",s%n).set("l",e?KdT.build(d.slice(0,e),n,s+1):null).set("r",e?KdT.build(d.slice(e),n,s+1):null),sort:(d,e)=>d.slice().sort((d,n)=>d[e]<n[e]?-1:d[e]>n[e]?1:0),d:(d,e)=>d.reduce((d,n,s)=>d+(n-e[s])**2,0),near:(d,e,n=1,s=[])=>d?(KdT.reg(s,d.get("p"),e,n),KdT.s(s,e,n,d.get("p"),d.get("a"),KdT.nf(e,...d.values()))):s,s:(d,e,n,s,t,l)=>KdT.sf(KdT.near(l[0],e,n,d),e,n,KdT.d([s[t]],[e[t]]),l[1]),sf:(d,e,n,s,t)=>d.find(d=>KdT.d(d,e)>=s)?KdT.near(t,e,n,d):d,reg(d,e,n,s){d.length<s?KdT.push(d,e):KdT.put(d,e,n,KdT.d(e,n))},push(d,e){-1==d.map(d=>String(d)).indexOf(String(e))&&d.push(e)},put(d,e,n,s,t){(t=d.findIndex(d=>s<KdT.d(d,n)))>-1&&(d[t]=e)},nf:(d,e,n,s,t)=>d[n]<=e[n]?[s,t]:[t,s]};